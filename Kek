def func1(arg1, arg2):
    var79 = var5(arg1, arg2)
    def func10(arg80, arg81):
        var82 = arg81 + arg80
        var83 = arg1 - arg1 + (var79 ^ arg1)
        var84 = (arg80 - (var82 & -167)) ^ var79
        var85 = -412068955 ^ var84 ^ (1725764041 | 603)
        var86 = var85 ^ 905 - var85 ^ arg1
        var87 = (arg2 - var84) ^ var86 | 312
        var88 = var83 + -383708413 & arg80 + arg81
        var89 = var79 | arg1
        var90 = arg81 - 148888339
        var91 = -1282568456 | (var85 | var79) - var85
        var92 = var85 | (var89 + var79 - arg2)
        if var84 < var86:
            var93 = (var88 & -634562658) ^ 335033683 - var85
        else:
            var93 = arg1 ^ var89
        var94 = arg81 + var91 + var91 - arg2
        var95 = (var92 | (arg81 + arg1)) ^ var89
        var96 = (arg80 + var85 - arg2) + var88
        var97 = var88 + -1271183413 | var95
        var98 = -481600962 | arg80
        if var97 < arg2:
            var99 = ((var95 | var98) + var84) | var96
        else:
            var99 = -207 & arg1
        var100 = var92 + (arg81 - var87 ^ var85)
        var101 = var83 | -84367208 + var91 ^ var88
        if var86 < var85:
            var102 = (var82 - var94) ^ var100 & var100
        else:
            var102 = ((var85 & var85) & var88) ^ var89
        var103 = var101 & arg80 & var83
        result = (var90 - var94) | ((var83 ^ var96) & ((var94 | (arg2 + arg1) & (var98 + var97 & 1927100504)) | 943)) + arg80
        return result
    var104 = func10(var79, arg2)
    var105 = (31 + 1725062631) + 2042229705
    var106 = -700 & (var105 - 993823206 | 423)
    var107 = -828 | var105 + arg1 | var79
    if arg2 < var79:
        var108 = 328 | (-603 - var105 | var107)
    else:
        var108 = (-696 - var105 ^ var106) - arg1
    var109 = -1337606534 + var104 - 243 + var105
    var110 = var105 - var79
    var111 = var107 | 206
    var112 = ((arg2 | var111) & var107) + var105
    var113 = var109 - 278684249
    var114 = var111 + ((var106 & var104) + var112)
    var115 = var79 & var110 | var113 & var104
    var116 = var79 + (var115 + var107 + var105)
    var117 = var106 ^ 31 + var104 | arg1
    var118 = var111 | ((758 + arg2) & var116)
    if var117 < var117:
        var119 = var118 ^ var109 - var117 ^ var118
    else:
        var119 = var114 ^ var117
    var120 = (var106 & (var79 | -215)) ^ 1643412002
    var121 = var111 + (var113 - var114) & var118
    var122 = 581 ^ var121
    var123 = (var111 ^ var104) + var121
    var124 = (var79 & var110 ^ var115) + var116
    var125 = var109 | var104 + 1338320393 & var122
    var126 = var110 - (var104 + var114 & arg1)
    if var106 < var120:
        var127 = (var113 | var109 - var123) | var110
    else:
        var127 = var112 - var79 ^ var124 ^ var122
    var128 = var118 ^ (var114 & var107) - arg1
    var129 = 226 - var109 & var111 - var111
    result = var118 ^ var116
    return result
def func4(arg6, arg7):
    var23 = func5(arg7, arg6)
    var52 = var26(arg7, var23)
    var57 = func9(var23, var52)
    var58 = 1365060663 + var52 ^ arg7 + arg7
    var59 = var57 - arg7 ^ var23
    var60 = var58 & arg7
    var61 = var52 & (arg6 - arg7)
    var62 = 1808462599 & (arg7 ^ var59 ^ var52)
    var63 = var62 + var23
    var64 = var59 ^ ((var23 - var61) + var23)
    var65 = var62 | (var63 | var57 | var64)
    var66 = ((var23 ^ var64) | var59) ^ var65
    var67 = 1320285105 & (var23 - arg7) - var63
    var68 = 677 - (arg7 ^ var62) | var66
    var69 = var66 ^ var59 + (var59 + 737)
    var70 = var65 - var58
    var71 = (arg6 - var70) & var70 | var64
    if var62 < var60:
        var72 = var57 | var59 + var60
    else:
        var72 = var61 ^ var57
    var73 = (var66 | var63) + (arg7 ^ 1796072036)
    var74 = arg7 & var61
    var75 = (var65 | var52 ^ var62) ^ var57
    var76 = ((var74 | arg7) + var74) & var69
    var77 = (var75 ^ var65) - var64 ^ var61
    var78 = (var63 & var74) | var73 | var67
    result = var65 | var71
    return result
def func9(arg53, arg54):
    var55 = 0
    for var56 in range(42):
        if arg54 < var56:
            var55 += arg53 | var56
        else:
            var55 += arg53 + var55
    return var55
def func8(arg27, arg28):
    var29 = arg28 ^ -985
    var30 = -776 | (-452 | 752)
    var31 = var29 - -902
    var32 = var31 & (var30 | (-232640367 | var31))
    var33 = (var29 & 894) | var29 | 1363740773
    var34 = var32 + var32 - var33 | var29
    var35 = var34 + -407
    var36 = ((var34 + var32) + var29) ^ var32
    var37 = -567929560 + arg28 ^ var29 & var33
    var38 = ((var34 + -1422031966) ^ arg27) & arg28
    var39 = arg27 + var38 ^ var35 & -1932359224
    var40 = var29 ^ var35 - var34 ^ var39
    var41 = (var40 | var33 & var36) ^ var35
    var42 = (var38 ^ var35 + var30) & var36
    if var31 < var41:
        var43 = var39 - ((var36 | var38) | var29)
    else:
        var43 = var32 + (var37 - -508 ^ var39)
    var44 = var41 ^ (var34 ^ -2143333520 + var39)
    var45 = (var37 + var34 & -273) - var31
    var46 = (var33 | var44 & var44) & var35
    var47 = var46 - var44
    var48 = (599 + var34 + var33) - var46
    var49 = var35 ^ (1801548004 | var39) | -11
    var50 = var46 - var39 + var33 & -677574883
    var51 = (var41 ^ var39 & arg28) ^ var47
    result = var37 & var32 | 559 + var36
    return result
def func7():
    closure = [-9]
    def func6(arg24, arg25):
        closure[0] += func8(arg24, arg25)
        return closure[0]
    func = func6
    return func
var26 = func7()
def func5(arg8, arg9):
    var10 = (-1186149710 - arg8) | -680 - -1290438505
    var11 = (arg9 - -861) | 709 + var10
    var12 = 765 - var10
    var13 = var12 + arg9
    var14 = (var10 & 508370843) & var11 & var11
    var15 = -1321664183 ^ (2066405021 | var12 + 891)
    var16 = -447420045 - var15 + var15
    var17 = var11 + (var13 ^ var13 - var10)
    var18 = (var17 | var10 ^ var16) - -210416588
    var19 = (var12 + var17 | -764752789) - var10
    var20 = var17 & var11
    var21 = ((var12 - arg9) + -810) ^ var10
    var22 = var12 & (-16 & var16)
    result = var22 + var12 | arg8 - var17
    return result
def func3():
    closure = [-1]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 130'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
